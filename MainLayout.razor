@inherits LayoutComponentBase

<CascadingValue Value="this">
    <header>
        @if (CurrentTheme is not null)
        {
            @CurrentTheme
        }
        <!--<nav id="main-nav">
            @if (logoActive)
            {
                <NavLink id="nav-logo" href="">TF</NavLink>
            }
            <div class="col">
                <button type="button" class="btn-gold btn-small" @onclick=@ToggleMenu>MENU</button>

                @if (menuActive)
                {
                    <div class="col w-20 absolute s-plain wrap">
                        <button type="button" class="btn-gold btn-small" @onclick=@ToggleMenu>X</button>
                        <h3>Theme</h3>
                        <div class="row-center">
                            <button type="button" class="btn-gold btn-xsmall" @onclick=@SetDefaultTheme>Arena (Default)</button>
                            <button type="button" class="btn-gold btn-xsmall" @onclick=@SetPinkTheme>Pink</button>
                            <button type="button" class="btn-gold btn-xsmall" @onclick=@SetAquaticTheme>Aquatic</button>
                            <button type="button" class="btn-gold btn-xsmall" @onclick=@SetAstroTheme>Astro</button>
                        </div>
                        <h3>About</h3>
                        <p>
                            Tournament Fighter is a fighting game. Defeat your opponents, and win the tournament!
                        </p>
                        <NavLink href="">RETURN TO HOME PAGE</NavLink>
                    </div>
                }
            </div>
        </nav>-->
    </header>
    <main>
        @Body
    </main>
    <footer>
    </footer>
</CascadingValue>

@code {
    private RenderFragment? CurrentTheme = null;

    private bool logoActive = true;
    private bool menuActive = false;

    public void SetDefaultTheme() => CurrentTheme = null;
    public void SetPinkTheme()
    {
        CurrentTheme = @<style>
                                body {
                                    background-color: lightpink;
                                }
                       </style>;
    }
    public void SetAquaticTheme()
    {
        CurrentTheme = @<style>
                                body {
                                    background-color: lightblue;
                                }
                       </style>;
    }
    public void SetAstroTheme()
    {
        CurrentTheme = @<style>
                                body {
                                    background-color: whitesmoke;
                                }
                       </style>
    ;
    }

    public void ToggleLogo(bool active)
    {
        logoActive = active;
        StateHasChanged();
    }

    public void DisableMenu()
    {
        menuActive = false;
        StateHasChanged();
    }

    private void ToggleMenu()
    {
        menuActive = !menuActive;
    }
}